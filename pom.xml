<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 项目基础信息 -->
    <groupId>com.afeng.logincheck</groupId>
    <artifactId>LoginCheck</artifactId>
    <version>1.1.3</version>
    <packaging>jar</packaging>

    <name>LoginCheck</name>
    <description>自动识别正版/离线身份并执行权限分配和广播。</description>
    <url>https://github.com/yi3364/LoginCheck</url>

    <properties>
        <!-- Minecraft 1.21.4 要求 Java 21 -->
        <java.version>21</java.version>
        <minecraft.version>1.21.4</minecraft.version>
        <!-- 编码设置，防止中文乱码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>com.afeng.logincheck.LoginCheck</main.class>
        <api.version>1.21</api.version>
        <plugin.description>自动识别正版/离线身份并执行权限分配和广播。</plugin.description>
    </properties>

    <!-- 添加 PaperMC 仓库，解决 bungeecord-chat/brigadier 依赖问题 -->
    <repositories>
        <repository>
            <id>papermc</id>
            <url>https://repo.papermc.io/repository/maven-public/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- PaperMC API 依赖 -->
        <dependency>
            <groupId>io.papermc.paper</groupId>
            <artifactId>paper-api</artifactId>
            <version>1.21.4-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <!-- Adventure API（Paper 1.16+ 已内置，可选） -->
        <dependency>
            <groupId>net.kyori</groupId>
            <artifactId>adventure-api</artifactId>
            <version>4.14.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- 如需单独依赖 bungeecord-chat/brigadier，可添加如下（一般不需要，paper-api 已传递依赖） -->
        <!--
        <dependency>
            <groupId>net.md-5</groupId>
            <artifactId>bungeecord-chat</artifactId>
            <version>1.20-R0.2-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.mojang</groupId>
            <artifactId>brigadier</artifactId>
            <version>1.0.18</version>
            <scope>provided</scope>
        </dependency>
        -->
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>plugin.yml</include>
                    <include>messages_zh.yml</include>
                    <include>messages_en.yml</include>
                </includes>
            </resource>
            <!-- 其他资源文件不需要过滤，可单独配置 -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>plugin.yml</exclude>
                    <exclude>messages_zh.yml</exclude>
                    <exclude>messages_en.yml</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- 编译插件，指定 Java 版本和警告屏蔽 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>-Xlint:-options</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- 打包插件，生成可用的 jar 文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
